{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\cynth\\\\GitRepos\\\\2012-dec14-react\\\\projectOne\\\\front-end\\\\src\\\\components\\\\editRequest.tsx\",\n    _s = $RefreshSig$();\n\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport '../css/editRequest.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { useRef } from 'react';\nimport requestService from '../services/request.service';\nimport employeeService from '../services/employee.service';\nimport { getEmployee, getSeniorEmployee } from '../redux/actions';\n\nfunction EditRequest() {\n  _s();\n\n  // use redux hooks\n  const employee = useSelector(state => state.employee);\n  console.log('Current employee: ', employee);\n  const newEmployee = { ...employee\n  };\n  const request = useSelector(state => state.request);\n  const newRequest = { ...request\n  };\n  console.log('Current request in state: ', request.id);\n  const history = useHistory();\n  const dispatch = useDispatch(); // check if employee and request's maker are the same\n\n  console.log(employee.demographics.email);\n  console.log(request.demographics.email);\n  let match = employee.demographics.email === request.demographics.email ? true : false;\n  console.log(match); // check status of request\n\n  let status = request.statusOf; //refs for input values\n\n  const rejectionRef = useRef();\n  const moreInfoRef = useRef();\n  const employeeChoiceRef = useRef(); // get employees below current employee\n\n  async function getJuniorEmployees() {\n    const employeesReturned = await employeeService.getEmployees().then(employeesReturned => {\n      console.log('all employees returned from db: ', employeesReturned); //then perform calculations\n\n      return employeesReturned;\n    }).catch(() => {\n      console.log('Error, could not get employees');\n    }); // get junior employees\n\n    const juniorEmployees = [];\n\n    if (employeesReturned) {\n      employeesReturned.forEach(employeeElement => {\n        if (employeeElement.role.length < employee.role.length) {\n          if (employee.role.includes('Head') && !employeeElement.role.includes('BenCo')) {\n            juniorEmployees.push(employeeElement);\n          }\n        }\n      });\n    }\n\n    return juniorEmployees;\n  } // unwrap promise\n\n\n  const juniorEmployeesPromise = getJuniorEmployees();\n  var juniorEmployees = [];\n  juniorEmployeesPromise.then(result => juniorEmployees.concat(result));\n  console.log('junior employee array: ', juniorEmployees); // for(const prop in juniorEmployeesPromise){\n  //     juniorEmployees.push(juniorEmployeesPromise[prop]);\n  // }\n\n  console.log('junior employees of current employee: ', juniorEmployees); // handle cancel button\n\n  function handleGoBackButtonClick() {\n    history.push(\"/dashboard\");\n  } // handle rejection button\n\n\n  async function handleRejectionButtonClick() {\n    // make sure rejection decision is filled\n    if (!rejectionRef.current.value) {\n      console.log('Error, please enter a rejection reason.');\n    } else {\n      // iterate over employee's requests and delete the specific request\n      for (let i = 0; i < employee.requests.length; i++) {\n        if (request.id === employee.requests[i].id) {\n          newEmployee.requests.splice(i, 1);\n        }\n      } //update current employee with new array of requests\n\n\n      employeeService.updateEmployee(newEmployee).then(employeeReturned => {\n        console.log('employee dispatched to employee state: ', employeeReturned);\n        dispatch(getEmployee(employeeReturned));\n      }).catch(() => {\n        console.log('Employee could not be updated!');\n      }); // change request status and request rejection info in request table (update request)\n\n      newRequest.statusOf = 'Rejected';\n      newRequest.rejectInfo = rejectionRef.current.value; // update request in DB, no need to dispatch\n\n      requestService.updateRequest(newRequest).then().catch(() => {\n        console.log('Error, could not update request in database.');\n      }); // get requestor by username\n\n      const requestor = await employeeService.getEmployeeByUsername(newRequest.username).then(employeeReturned => {\n        console.log('requestor returned: ', employeeReturned);\n        return employeeReturned;\n      }).catch(() => {\n        console.log('Error, could not get requestor from database');\n      }); //update their request\n\n      if (requestor) {\n        for (let i = 0; i < requestor.requests.length; i++) {\n          if (request.id === requestor.requests[i].id) {\n            requestor.requests.splice(i, 1);\n            requestor.requests.push(newRequest);\n          }\n        }\n      } // update employee whose status is affected\n\n\n      if (requestor) {\n        employeeService.updateEmployee(requestor).then(() => {\n          history.push('/dashboard');\n        }).catch(() => {\n          console.log('Employee could not be updated!');\n        });\n      }\n    }\n  } // handle accept button\n\n\n  async function handleAcceptButtonClick() {\n    // if BenCo\n    if (newEmployee.role.includes('BenCo')) {\n      // change request's status to accepted (update requestor employee)\n      newRequest.statusOf = 'Accepted'; // get requestor by username\n\n      const requestor = await employeeService.getEmployeeByUsername(newRequest.username).then(employeeReturned => {\n        console.log('requestor returned: ', employeeReturned);\n        return employeeReturned;\n      }).catch(() => {\n        console.log('Error, could not get requestor from database');\n      }); //update their request\n\n      if (requestor) {\n        for (let i = 0; i < requestor.requests.length; i++) {\n          if (request.id === requestor.requests[i].id) {\n            requestor.requests.splice(i, 1);\n            requestor.requests.push(newRequest);\n          }\n        }\n      } // update employee whose request status is affected\n\n\n      if (requestor) {\n        employeeService.updateEmployee(requestor).then().catch(() => {\n          console.log('Employee could not be updated!');\n        });\n      } // change request status in request table (update request)\n\n\n      requestService.updateRequest(newRequest).then().catch(() => {\n        console.log('Error, could not update request in database.');\n      });\n    } else {\n      //get senior employee\n      let arrayReturned = await employeeService.getSeniorEmployeeByRole(newEmployee.role).then(employees => {\n        return employees;\n      }).catch(() => {\n        console.log('Error, could not get senior employee!');\n      });\n      let newArray = [];\n\n      if (arrayReturned) {\n        for (const prop in arrayReturned) {\n          newArray.push(arrayReturned[prop]);\n        }\n      }\n\n      const newSeniorEmployee = newArray[0]; // add the request to the senior employee\n\n      newSeniorEmployee.requests.push(newRequest); //add request to senior employee's requests\n\n      employeeService.updateEmployee(newSeniorEmployee).then(employeeReturned => {\n        console.log('employee dispatched to senioremployee state: ', employeeReturned);\n        dispatch(getSeniorEmployee(employeeReturned));\n      }).catch(() => {\n        console.log('Employee could not be updated!');\n      });\n    } // iterate over employee's requests and delete the specific request\n\n\n    for (let i = 0; i < employee.requests.length; i++) {\n      if (request.id === employee.requests[i].id) {\n        newEmployee.requests.splice(i, 1);\n      }\n    } //update current employee with new array of requests\n\n\n    employeeService.updateEmployee(newEmployee).then(employeeReturned => {\n      console.log('employee dispatched to employee state: ', employeeReturned);\n      dispatch(getEmployee(employeeReturned));\n      history.push('/dashboard');\n    }).catch(() => {\n      console.log('Employee could not be updated!');\n    });\n  } // handle request info button\n\n\n  function handleRequestInfoButtonClick() {// get all employees BELOW my role, make them options in a selection input\n    // make sure proper selection of employee is made\n    // change request status to 'Needs Revision' (update request)\n    // change selected employee's current request's status to 'Needs Revision from TITLE OF CURRENT EMPLOYEE' (update employee)\n    // maybe use seniorEmployee state for this or create a juniorEmployee state\n    // delete request from current employee (update employee)\n  }\n\n  function handleCancelRequestButtonClick() {// delete request from database\n    // remove request from current employee (update employee)\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    id: \"editRequestContainer\",\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      id: \"reimbursementForm\",\n      children: [/*#__PURE__*/_jsxDEV(Col, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        lg: 8,\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          id: \"reimbursementHeader\",\n          children: [/*#__PURE__*/_jsxDEV(Col, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: \"10\",\n            className: \"text-center\",\n            children: /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"Tuition Reimbursement Form\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          id: \"reimbursementBody\",\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Form, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Row, {\n                className: \"justify-content-md-center\",\n                children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                  as: Col,\n                  controlId: \"formDateCreated\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Today's Date\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 266,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"text\",\n                    placeholder: request.dateCreated,\n                    readOnly: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 267,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 265,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n                children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                  as: Col,\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"First Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 272,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"text\",\n                    placeholder: request.demographics.firstname,\n                    readOnly: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 273,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Last Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 274,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"text\",\n                    placeholder: request.demographics.lastname,\n                    readOnly: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 275,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 271,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  as: Col,\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Phone Number\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 278,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"text\",\n                    placeholder: request.demographics.phone,\n                    readOnly: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 279,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Email\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 280,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"text\",\n                    placeholder: request.demographics.email,\n                    readOnly: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 281,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 277,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n                children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                  as: Col,\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Event Type\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 286,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"text\",\n                    placeholder: request.event.eventType,\n                    readOnly: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 287,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Cost\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 289,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"text\",\n                    placeholder: request.event.cost.toString(),\n                    readOnly: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 290,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Projected Reimbursement\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 291,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"text\",\n                    readOnly: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 292,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 285,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  as: Col,\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Start Date\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 295,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"text\",\n                    placeholder: request.event.startDate,\n                    readOnly: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 296,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"End Date\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 297,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"text\",\n                    placeholder: request.event.endDate,\n                    readOnly: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 298,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 294,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  as: Col,\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Grading Format\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 301,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"text\",\n                    placeholder: request.event.gradingFormat,\n                    readOnly: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 302,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Location\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 304,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"text\",\n                    placeholder: request.event.location,\n                    readOnly: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 305,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 300,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n                children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                  as: Col,\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Event Description\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 310,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    as: \"textarea\",\n                    rows: 3,\n                    placeholder: request.event.description,\n                    readOnly: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 311,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 309,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  as: Col,\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Justification\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 314,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    as: \"textarea\",\n                    rows: 3,\n                    placeholder: request.justification,\n                    readOnly: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 315,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 313,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 308,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n                children: [status === 'Pending' && !match ? /*#__PURE__*/_jsxDEV(Form.Group, {\n                  as: Col,\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Rejection Reason\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 321,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    as: \"textarea\",\n                    rows: 3,\n                    ref: rejectionRef\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 322,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 320,\n                  columnNumber: 71\n                }, this) : null, status === 'Rejected' ? /*#__PURE__*/_jsxDEV(Form.Group, {\n                  as: Col,\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Rejection Reason\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 325,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    as: \"textarea\",\n                    rows: 3,\n                    placeholder: request.rejectInfo,\n                    ref: rejectionRef,\n                    readOnly: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 326,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 324,\n                  columnNumber: 62\n                }, this) : null, status.includes('Needs Revision') ? /*#__PURE__*/_jsxDEV(Form.Group, {\n                  as: Col,\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Additional Information\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 330,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    as: \"textarea\",\n                    rows: 3\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 331,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 329,\n                  columnNumber: 74\n                }, this) : null, status === 'Pending' && !match ? /*#__PURE__*/_jsxDEV(Form.Group, {\n                  as: Col,\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Select Employee\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 335,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"text\",\n                    as: \"select\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 336,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Request More Information\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 337,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    as: \"textarea\",\n                    rows: 3\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 338,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 334,\n                  columnNumber: 71\n                }, this) : null]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 318,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n                id: \"createRequestButtonRow\",\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  className: \"d-flex justify-content-center\",\n                  children: [status === 'Pending' && !match ? /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"danger\",\n                    onClick: handleRejectionButtonClick,\n                    children: \"Reject Request\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 344,\n                    columnNumber: 75\n                  }, this) : null, status.includes('Needs Revision') && match ? /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"danger\",\n                    children: \"Cancel Request\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 347,\n                    columnNumber: 87\n                  }, this) : null]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 342,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  className: \"d-flex justify-content-center\",\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"warning\",\n                    onClick: handleGoBackButtonClick,\n                    children: \"Go Back\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 353,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 351,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  className: \"d-flex justify-content-center\",\n                  children: [status === 'Pending' && !match ? /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"success\",\n                    onClick: handleAcceptButtonClick,\n                    children: \"Approve\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 360,\n                    columnNumber: 41\n                  }, this) : null, status.includes('Needs Revision') && match ? /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"success\",\n                    children: \"Resubmit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 364,\n                    columnNumber: 41\n                  }, this) : null]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 357,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  className: \"d-flex justify-content-center\",\n                  children: status === 'Pending' && !match ? /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"info\",\n                    children: \"Request More Info\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 371,\n                    columnNumber: 41\n                  }, this) : null\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 368,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 341,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 250,\n    columnNumber: 9\n  }, this);\n}\n\n_s(EditRequest, \"kkdvKaRT4QTPWNcw9WHasJIlD20=\", false, function () {\n  return [useSelector, useSelector, useHistory, useDispatch];\n});\n\n_c = EditRequest;\nexport default EditRequest;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditRequest\");","map":{"version":3,"sources":["C:/Users/cynth/GitRepos/2012-dec14-react/projectOne/front-end/src/components/editRequest.tsx"],"names":["Container","Form","Button","Row","Col","useDispatch","useSelector","useHistory","useRef","requestService","employeeService","getEmployee","getSeniorEmployee","EditRequest","employee","state","console","log","newEmployee","request","newRequest","id","history","dispatch","demographics","email","match","status","statusOf","rejectionRef","moreInfoRef","employeeChoiceRef","getJuniorEmployees","employeesReturned","getEmployees","then","catch","juniorEmployees","forEach","employeeElement","role","length","includes","push","juniorEmployeesPromise","result","concat","handleGoBackButtonClick","handleRejectionButtonClick","current","value","i","requests","splice","updateEmployee","employeeReturned","rejectInfo","updateRequest","requestor","getEmployeeByUsername","username","handleAcceptButtonClick","arrayReturned","getSeniorEmployeeByRole","employees","newArray","prop","newSeniorEmployee","handleRequestInfoButtonClick","handleCancelRequestButtonClick","dateCreated","firstname","lastname","phone","event","eventType","cost","toString","startDate","endDate","gradingFormat","location","description","justification"],"mappings":";;;;;AAAA,OAAOA,SAAP,MAAsB,2BAAtB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAO,wBAAP;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAA2BC,MAA3B,QAAyC,OAAzC;AACA,OAAOC,cAAP,MAA2B,6BAA3B;AACA,OAAOC,eAAP,MAA4B,8BAA5B;AACA,SAASC,WAAT,EAAsBC,iBAAtB,QAA+C,kBAA/C;;AAGA,SAASC,WAAT,GAAuB;AAAA;;AACnB;AACA,QAAMC,QAAQ,GAAGR,WAAW,CAAES,KAAD,IAA0BA,KAAK,CAACD,QAAjC,CAA5B;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCH,QAAlC;AACA,QAAMI,WAAW,GAAG,EAAC,GAAGJ;AAAJ,GAApB;AAEA,QAAMK,OAAO,GAAGb,WAAW,CAAES,KAAD,IAAyBA,KAAK,CAACI,OAAhC,CAA3B;AACA,QAAMC,UAAU,GAAG,EAAC,GAAGD;AAAJ,GAAnB;AACAH,EAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0CE,OAAO,CAACE,EAAlD;AAEA,QAAMC,OAAO,GAAGf,UAAU,EAA1B;AACA,QAAMgB,QAAQ,GAAGlB,WAAW,EAA5B,CAXmB,CAanB;;AACAW,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACU,YAAT,CAAsBC,KAAlC;AACAT,EAAAA,OAAO,CAACC,GAAR,CAAYE,OAAO,CAACK,YAAR,CAAqBC,KAAjC;AACA,MAAIC,KAAK,GAAGZ,QAAQ,CAACU,YAAT,CAAsBC,KAAtB,KAAgCN,OAAO,CAACK,YAAR,CAAqBC,KAArD,GAA6D,IAA7D,GAAoE,KAAhF;AACAT,EAAAA,OAAO,CAACC,GAAR,CAAYS,KAAZ,EAjBmB,CAmBnB;;AACA,MAAIC,MAAM,GAAGR,OAAO,CAACS,QAArB,CApBmB,CAsBnB;;AACA,QAAMC,YAAY,GAAGrB,MAAM,EAA3B;AACA,QAAMsB,WAAW,GAAGtB,MAAM,EAA1B;AACA,QAAMuB,iBAAiB,GAAGvB,MAAM,EAAhC,CAzBmB,CA2BnB;;AACA,iBAAewB,kBAAf,GAAoC;AAChC,UAAMC,iBAAiB,GAAG,MAAMvB,eAAe,CAACwB,YAAhB,GAA+BC,IAA/B,CAAqCF,iBAAiB,IAAI;AACtFjB,MAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ,EAAgDgB,iBAAhD,EADsF,CAEtF;;AACA,aAAOA,iBAAP;AACH,KAJ+B,EAI7BG,KAJ6B,CAItB,MAAM;AACZpB,MAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ;AACH,KAN+B,CAAhC,CADgC,CAShC;;AACA,UAAMoB,eAA2B,GAAG,EAApC;;AAEA,QAAIJ,iBAAJ,EAAuB;AACnBA,MAAAA,iBAAiB,CAACK,OAAlB,CAA4BC,eAAD,IAA0B;AACjD,YAAIA,eAAe,CAACC,IAAhB,CAAqBC,MAArB,GAA8B3B,QAAQ,CAAC0B,IAAT,CAAcC,MAAhD,EAAwD;AACpD,cAAI3B,QAAQ,CAAC0B,IAAT,CAAcE,QAAd,CAAuB,MAAvB,KAAkC,CAACH,eAAe,CAACC,IAAhB,CAAqBE,QAArB,CAA8B,OAA9B,CAAvC,EAA+E;AAC3EL,YAAAA,eAAe,CAACM,IAAhB,CAAqBJ,eAArB;AACH;AAEJ;AACJ,OAPD;AAQH;;AAED,WAAOF,eAAP;AAEH,GArDkB,CAuDnB;;;AACA,QAAMO,sBAAsB,GAAGZ,kBAAkB,EAAjD;AACA,MAAIK,eAAoB,GAAG,EAA3B;AACAO,EAAAA,sBAAsB,CAACT,IAAvB,CAA4BU,MAAM,IAAIR,eAAe,CAACS,MAAhB,CAAuBD,MAAvB,CAAtC;AAEA7B,EAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCoB,eAAvC,EA5DmB,CA8DnB;AACA;AACA;;AAEArB,EAAAA,OAAO,CAACC,GAAR,CAAY,wCAAZ,EAAsDoB,eAAtD,EAlEmB,CAoEnB;;AACA,WAASU,uBAAT,GAAmC;AAC/BzB,IAAAA,OAAO,CAACqB,IAAR,CAAa,YAAb;AACH,GAvEkB,CAyEnB;;;AACA,iBAAeK,0BAAf,GAA4C;AACxC;AACA,QAAI,CAACnB,YAAY,CAACoB,OAAb,CAAqBC,KAA1B,EAAiC;AAC7BlC,MAAAA,OAAO,CAACC,GAAR,CAAY,yCAAZ;AACH,KAFD,MAEO;AACH;AACA,WAAK,IAAIkC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGrC,QAAQ,CAACsC,QAAT,CAAkBX,MAAtC,EAA8CU,CAAC,EAA/C,EAAmD;AAC/C,YAAIhC,OAAO,CAACE,EAAR,KAAeP,QAAQ,CAACsC,QAAT,CAAkBD,CAAlB,EAAqB9B,EAAxC,EAA4C;AACxCH,UAAAA,WAAW,CAACkC,QAAZ,CAAqBC,MAArB,CAA4BF,CAA5B,EAA+B,CAA/B;AACH;AACJ,OANE,CAOH;;;AACAzC,MAAAA,eAAe,CAAC4C,cAAhB,CAA+BpC,WAA/B,EAA4CiB,IAA5C,CAAkDoB,gBAAgB,IAAI;AAClEvC,QAAAA,OAAO,CAACC,GAAR,CAAY,yCAAZ,EAAuDsC,gBAAvD;AACAhC,QAAAA,QAAQ,CAACZ,WAAW,CAAC4C,gBAAD,CAAZ,CAAR;AACH,OAHD,EAGGnB,KAHH,CAGU,MAAM;AACZpB,QAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ;AACH,OALD,EARG,CAeH;;AACAG,MAAAA,UAAU,CAACQ,QAAX,GAAsB,UAAtB;AACAR,MAAAA,UAAU,CAACoC,UAAX,GAAwB3B,YAAY,CAACoB,OAAb,CAAqBC,KAA7C,CAjBG,CAkBH;;AACAzC,MAAAA,cAAc,CAACgD,aAAf,CAA6BrC,UAA7B,EAAyCe,IAAzC,GAAgDC,KAAhD,CAAuD,MAAM;AACzDpB,QAAAA,OAAO,CAACC,GAAR,CAAY,8CAAZ;AACH,OAFD,EAnBG,CAuBH;;AACA,YAAMyC,SAAS,GAAG,MAAMhD,eAAe,CAACiD,qBAAhB,CAAsCvC,UAAU,CAACwC,QAAjD,EAA2DzB,IAA3D,CAAiEoB,gBAAgB,IAAI;AACzGvC,QAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCsC,gBAApC;AACA,eAAOA,gBAAP;AACH,OAHuB,EAGrBnB,KAHqB,CAGd,MAAM;AACZpB,QAAAA,OAAO,CAACC,GAAR,CAAY,8CAAZ;AACH,OALuB,CAAxB,CAxBG,CA+BH;;AACA,UAAIyC,SAAJ,EAAe;AACX,aAAK,IAAIP,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGO,SAAS,CAACN,QAAV,CAAmBX,MAAvC,EAA+CU,CAAC,EAAhD,EAAoD;AAChD,cAAIhC,OAAO,CAACE,EAAR,KAAeqC,SAAS,CAACN,QAAV,CAAmBD,CAAnB,EAAsB9B,EAAzC,EAA6C;AACzCqC,YAAAA,SAAS,CAACN,QAAV,CAAmBC,MAAnB,CAA0BF,CAA1B,EAA6B,CAA7B;AACAO,YAAAA,SAAS,CAACN,QAAV,CAAmBT,IAAnB,CAAwBvB,UAAxB;AACH;AACJ;AACJ,OAvCE,CA0CH;;;AACA,UAAIsC,SAAJ,EAAe;AACXhD,QAAAA,eAAe,CAAC4C,cAAhB,CAA+BI,SAA/B,EAA0CvB,IAA1C,CAAgD,MAAM;AAClDb,UAAAA,OAAO,CAACqB,IAAR,CAAa,YAAb;AACH,SAFD,EAEGP,KAFH,CAEU,MAAM;AACZpB,UAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ;AACH,SAJD;AAKH;AACJ;AAEJ,GAlIkB,CAoInB;;;AACA,iBAAe4C,uBAAf,GAAyC;AAErC;AACA,QAAI3C,WAAW,CAACsB,IAAZ,CAAiBE,QAAjB,CAA0B,OAA1B,CAAJ,EAAwC;AACpC;AACAtB,MAAAA,UAAU,CAACQ,QAAX,GAAsB,UAAtB,CAFoC,CAIpC;;AACA,YAAM8B,SAAS,GAAG,MAAMhD,eAAe,CAACiD,qBAAhB,CAAsCvC,UAAU,CAACwC,QAAjD,EAA2DzB,IAA3D,CAAiEoB,gBAAgB,IAAI;AACzGvC,QAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCsC,gBAApC;AACA,eAAOA,gBAAP;AACH,OAHuB,EAGrBnB,KAHqB,CAGd,MAAM;AACZpB,QAAAA,OAAO,CAACC,GAAR,CAAY,8CAAZ;AACH,OALuB,CAAxB,CALoC,CAYpC;;AACA,UAAIyC,SAAJ,EAAe;AACX,aAAK,IAAIP,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGO,SAAS,CAACN,QAAV,CAAmBX,MAAvC,EAA+CU,CAAC,EAAhD,EAAoD;AAChD,cAAIhC,OAAO,CAACE,EAAR,KAAeqC,SAAS,CAACN,QAAV,CAAmBD,CAAnB,EAAsB9B,EAAzC,EAA6C;AACzCqC,YAAAA,SAAS,CAACN,QAAV,CAAmBC,MAAnB,CAA0BF,CAA1B,EAA6B,CAA7B;AACAO,YAAAA,SAAS,CAACN,QAAV,CAAmBT,IAAnB,CAAwBvB,UAAxB;AACH;AACJ;AACJ,OApBmC,CAsBpC;;;AACA,UAAIsC,SAAJ,EAAe;AACXhD,QAAAA,eAAe,CAAC4C,cAAhB,CAA+BI,SAA/B,EAA0CvB,IAA1C,GAAiDC,KAAjD,CAAwD,MAAM;AAC1DpB,UAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ;AACH,SAFD;AAGH,OA3BmC,CA6BpC;;;AACAR,MAAAA,cAAc,CAACgD,aAAf,CAA6BrC,UAA7B,EAAyCe,IAAzC,GAAgDC,KAAhD,CAAuD,MAAM;AACzDpB,QAAAA,OAAO,CAACC,GAAR,CAAY,8CAAZ;AACH,OAFD;AAGH,KAjCD,MAiCO;AACH;AACA,UAAI6C,aAAa,GAAG,MAAMpD,eAAe,CAACqD,uBAAhB,CAAwC7C,WAAW,CAACsB,IAApD,EAA0DL,IAA1D,CAAgE6B,SAAS,IAAI;AACnG,eAAOA,SAAP;AACH,OAFyB,EAEvB5B,KAFuB,CAEjB,MAAM;AACXpB,QAAAA,OAAO,CAACC,GAAR,CAAY,uCAAZ;AACH,OAJyB,CAA1B;AAKA,UAAIgD,QAAoB,GAAG,EAA3B;;AACA,UAAIH,aAAJ,EAAmB;AACf,aAAK,MAAMI,IAAX,IAAmBJ,aAAnB,EAAkC;AAC1BG,UAAAA,QAAQ,CAACtB,IAAT,CAAcmB,aAAa,CAACI,IAAD,CAA3B;AACH;AACR;;AACD,YAAMC,iBAAiB,GAAGF,QAAQ,CAAC,CAAD,CAAlC,CAbG,CAeH;;AACAE,MAAAA,iBAAiB,CAACf,QAAlB,CAA2BT,IAA3B,CAAgCvB,UAAhC,EAhBG,CAkBH;;AACAV,MAAAA,eAAe,CAAC4C,cAAhB,CAA+Ba,iBAA/B,EAAkDhC,IAAlD,CAAwDoB,gBAAgB,IAAI;AACxEvC,QAAAA,OAAO,CAACC,GAAR,CAAY,+CAAZ,EAA6DsC,gBAA7D;AACAhC,QAAAA,QAAQ,CAACX,iBAAiB,CAAC2C,gBAAD,CAAlB,CAAR;AACH,OAHD,EAGGnB,KAHH,CAGU,MAAM;AACZpB,QAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ;AACH,OALD;AAMH,KA7DoC,CA+DrC;;;AACA,SAAK,IAAIkC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGrC,QAAQ,CAACsC,QAAT,CAAkBX,MAAtC,EAA8CU,CAAC,EAA/C,EAAmD;AAC/C,UAAIhC,OAAO,CAACE,EAAR,KAAeP,QAAQ,CAACsC,QAAT,CAAkBD,CAAlB,EAAqB9B,EAAxC,EAA4C;AACxCH,QAAAA,WAAW,CAACkC,QAAZ,CAAqBC,MAArB,CAA4BF,CAA5B,EAA+B,CAA/B;AACH;AACJ,KApEoC,CAqErC;;;AACAzC,IAAAA,eAAe,CAAC4C,cAAhB,CAA+BpC,WAA/B,EAA4CiB,IAA5C,CAAkDoB,gBAAgB,IAAI;AAClEvC,MAAAA,OAAO,CAACC,GAAR,CAAY,yCAAZ,EAAuDsC,gBAAvD;AACAhC,MAAAA,QAAQ,CAACZ,WAAW,CAAC4C,gBAAD,CAAZ,CAAR;AACAjC,MAAAA,OAAO,CAACqB,IAAR,CAAa,YAAb;AACH,KAJD,EAIGP,KAJH,CAIU,MAAM;AACZpB,MAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ;AACH,KAND;AAOH,GAlNkB,CAoNnB;;;AACA,WAASmD,4BAAT,GAAwC,CACpC;AAEA;AAEA;AAEA;AACI;AAEJ;AACH;;AAED,WAASC,8BAAT,GAA0C,CACtC;AAEA;AAEH;;AAED,sBACI,QAAC,SAAD;AAAW,IAAA,EAAE,EAAC,sBAAd;AAAA,2BACI,QAAC,GAAD;AAAK,MAAA,EAAE,EAAC,mBAAR;AAAA,8BACI,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAA,gCACI,QAAC,GAAD;AAAK,UAAA,EAAE,EAAC,qBAAR;AAAA,kCACI,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,GAAD;AAAK,YAAA,EAAE,EAAC,IAAR;AAAa,YAAA,SAAS,EAAC,aAAvB;AAAA,mCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAKI,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,kBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAQI,QAAC,GAAD;AAAK,UAAA,EAAE,EAAC,mBAAR;AAAA,iCACI,QAAC,GAAD;AAAA,mCACI,QAAC,IAAD;AAAA,sCACI,QAAC,IAAD,CAAM,GAAN;AAAU,gBAAA,SAAS,EAAC,2BAApB;AAAA,uCACI,QAAC,IAAD,CAAM,KAAN;AAAY,kBAAA,EAAE,EAAEjE,GAAhB;AAAqB,kBAAA,SAAS,EAAC,iBAA/B;AAAA,0CACQ,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADR,eAEQ,QAAC,IAAD,CAAM,OAAN;AAAc,oBAAA,IAAI,EAAC,MAAnB;AAA0B,oBAAA,WAAW,EAAEe,OAAO,CAACmD,WAA/C;AAA4D,oBAAA,QAAQ;AAApE;AAAA;AAAA;AAAA;AAAA,0BAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBADJ,eAOI,QAAC,IAAD,CAAM,GAAN;AAAA,wCACI,QAAC,IAAD,CAAM,KAAN;AAAY,kBAAA,EAAE,EAAElE,GAAhB;AAAA,0CACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AAAc,oBAAA,IAAI,EAAC,MAAnB;AAA0B,oBAAA,WAAW,EAAEe,OAAO,CAACK,YAAR,CAAqB+C,SAA5D;AAAuE,oBAAA,QAAQ;AAA/E;AAAA;AAAA;AAAA;AAAA,0BAFJ,eAGI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAHJ,eAII,QAAC,IAAD,CAAM,OAAN;AAAc,oBAAA,IAAI,EAAC,MAAnB;AAA0B,oBAAA,WAAW,EAAEpD,OAAO,CAACK,YAAR,CAAqBgD,QAA5D;AAAsE,oBAAA,QAAQ;AAA9E;AAAA;AAAA;AAAA;AAAA,0BAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAOI,QAAC,IAAD,CAAM,KAAN;AAAY,kBAAA,EAAE,EAAEpE,GAAhB;AAAA,0CACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AAAc,oBAAA,IAAI,EAAC,MAAnB;AAA0B,oBAAA,WAAW,EAAEe,OAAO,CAACK,YAAR,CAAqBiD,KAA5D;AAAmE,oBAAA,QAAQ;AAA3E;AAAA;AAAA;AAAA;AAAA,0BAFJ,eAGI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAHJ,eAII,QAAC,IAAD,CAAM,OAAN;AAAc,oBAAA,IAAI,EAAC,MAAnB;AAA0B,oBAAA,WAAW,EAAEtD,OAAO,CAACK,YAAR,CAAqBC,KAA5D;AAAmE,oBAAA,QAAQ;AAA3E;AAAA;AAAA;AAAA;AAAA,0BAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBAPJ,eAqBI,QAAC,IAAD,CAAM,GAAN;AAAA,wCACI,QAAC,IAAD,CAAM,KAAN;AAAY,kBAAA,EAAE,EAAErB,GAAhB;AAAA,0CACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AAAc,oBAAA,IAAI,EAAC,MAAnB;AAA0B,oBAAA,WAAW,EAAEe,OAAO,CAACuD,KAAR,CAAcC,SAArD;AAAgE,oBAAA,QAAQ;AAAxE;AAAA;AAAA;AAAA;AAAA,0BAFJ,eAII,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAJJ,eAKI,QAAC,IAAD,CAAM,OAAN;AAAc,oBAAA,IAAI,EAAC,MAAnB;AAA0B,oBAAA,WAAW,EAAExD,OAAO,CAACuD,KAAR,CAAcE,IAAd,CAAmBC,QAAnB,EAAvC;AAAsE,oBAAA,QAAQ;AAA9E;AAAA;AAAA;AAAA;AAAA,0BALJ,eAMI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BANJ,eAOI,QAAC,IAAD,CAAM,OAAN;AAAc,oBAAA,IAAI,EAAC,MAAnB;AAA0B,oBAAA,QAAQ;AAAlC;AAAA;AAAA;AAAA;AAAA,0BAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAUI,QAAC,IAAD,CAAM,KAAN;AAAY,kBAAA,EAAE,EAAEzE,GAAhB;AAAA,0CACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AAAc,oBAAA,IAAI,EAAC,MAAnB;AAA0B,oBAAA,WAAW,EAAEe,OAAO,CAACuD,KAAR,CAAcI,SAArD;AAAgE,oBAAA,QAAQ;AAAxE;AAAA;AAAA;AAAA;AAAA,0BAFJ,eAGI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAHJ,eAII,QAAC,IAAD,CAAM,OAAN;AAAc,oBAAA,IAAI,EAAC,MAAnB;AAA0B,oBAAA,WAAW,EAAE3D,OAAO,CAACuD,KAAR,CAAcK,OAArD;AAA6D,oBAAA,QAAQ;AAArE;AAAA;AAAA;AAAA;AAAA,0BAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBAVJ,eAgBI,QAAC,IAAD,CAAM,KAAN;AAAY,kBAAA,EAAE,EAAE3E,GAAhB;AAAA,0CACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AAAc,oBAAA,IAAI,EAAC,MAAnB;AAA0B,oBAAA,WAAW,EAAEe,OAAO,CAACuD,KAAR,CAAcM,aAArD;AAAmE,oBAAA,QAAQ;AAA3E;AAAA;AAAA;AAAA;AAAA,0BAFJ,eAII,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAJJ,eAKI,QAAC,IAAD,CAAM,OAAN;AAAc,oBAAA,IAAI,EAAC,MAAnB;AAA0B,oBAAA,WAAW,EAAE7D,OAAO,CAACuD,KAAR,CAAcO,QAArD;AAA8D,oBAAA,QAAQ;AAAtE;AAAA;AAAA;AAAA;AAAA,0BALJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBArBJ,eA6CI,QAAC,IAAD,CAAM,GAAN;AAAA,wCACI,QAAC,IAAD,CAAM,KAAN;AAAY,kBAAA,EAAE,EAAE7E,GAAhB;AAAA,0CACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AAAe,oBAAA,EAAE,EAAC,UAAlB;AAA6B,oBAAA,IAAI,EAAE,CAAnC;AAAsC,oBAAA,WAAW,EAAEe,OAAO,CAACuD,KAAR,CAAcQ,WAAjE;AAA8E,oBAAA,QAAQ;AAAtF;AAAA;AAAA;AAAA;AAAA,0BAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAKI,QAAC,IAAD,CAAM,KAAN;AAAY,kBAAA,EAAE,EAAE9E,GAAhB;AAAA,0CACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AAAc,oBAAA,EAAE,EAAC,UAAjB;AAA4B,oBAAA,IAAI,EAAE,CAAlC;AAAqC,oBAAA,WAAW,EAAEe,OAAO,CAACgE,aAA1D;AAAyE,oBAAA,QAAQ;AAAjF;AAAA;AAAA;AAAA;AAAA,0BAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBA7CJ,eAuDI,QAAC,IAAD,CAAM,GAAN;AAAA,2BAEKxD,MAAM,KAAK,SAAX,IAAwB,CAACD,KAAzB,gBAAiC,QAAC,IAAD,CAAM,KAAN;AAAY,kBAAA,EAAE,EAAEtB,GAAhB;AAAA,0CAC9B,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAD8B,eAE9B,QAAC,IAAD,CAAM,OAAN;AAAe,oBAAA,EAAE,EAAC,UAAlB;AAA6B,oBAAA,IAAI,EAAE,CAAnC;AAAuC,oBAAA,GAAG,EAAEyB;AAA5C;AAAA;AAAA;AAAA;AAAA,0BAF8B;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAjC,GAGe,IALpB,EAMKF,MAAM,KAAK,UAAX,gBAAwB,QAAC,IAAD,CAAM,KAAN;AAAY,kBAAA,EAAE,EAAEvB,GAAhB;AAAA,0CACrB,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADqB,eAErB,QAAC,IAAD,CAAM,OAAN;AAAe,oBAAA,EAAE,EAAC,UAAlB;AAA6B,oBAAA,IAAI,EAAE,CAAnC;AAAuC,oBAAA,WAAW,EAAEe,OAAO,CAACqC,UAA5D;AAAwE,oBAAA,GAAG,EAAE3B,YAA7E;AAA2F,oBAAA,QAAQ;AAAnG;AAAA;AAAA;AAAA;AAAA,0BAFqB;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAxB,GAGe,IATpB,EAWKF,MAAM,CAACe,QAAP,CAAgB,gBAAhB,iBAAoC,QAAC,IAAD,CAAM,KAAN;AAAY,kBAAA,EAAE,EAAEtC,GAAhB;AAAA,0CACjC,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADiC,eAEjC,QAAC,IAAD,CAAM,OAAN;AAAc,oBAAA,EAAE,EAAC,UAAjB;AAA4B,oBAAA,IAAI,EAAE;AAAlC;AAAA;AAAA;AAAA;AAAA,0BAFiC;AAAA;AAAA;AAAA;AAAA;AAAA,wBAApC,GAGc,IAdnB,EAgBKuB,MAAM,KAAK,SAAX,IAAwB,CAACD,KAAzB,gBAAiC,QAAC,IAAD,CAAM,KAAN;AAAY,kBAAA,EAAE,EAAEtB,GAAhB;AAAA,0CAC9B,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAD8B,eAE9B,QAAC,IAAD,CAAM,OAAN;AAAc,oBAAA,IAAI,EAAC,MAAnB;AAA0B,oBAAA,EAAE,EAAC;AAA7B;AAAA;AAAA;AAAA;AAAA,0BAF8B,eAG9B,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAH8B,eAI9B,QAAC,IAAD,CAAM,OAAN;AAAc,oBAAA,EAAE,EAAC,UAAjB;AAA4B,oBAAA,IAAI,EAAE;AAAlC;AAAA;AAAA;AAAA;AAAA,0BAJ8B;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAjC,GAKe,IArBpB;AAAA;AAAA;AAAA;AAAA;AAAA,sBAvDJ,eA8EI,QAAC,IAAD,CAAM,GAAN;AAAU,gBAAA,EAAE,EAAC,wBAAb;AAAA,wCACI,QAAC,GAAD;AAAK,kBAAA,SAAS,EAAC,+BAAf;AAAA,6BAEKuB,MAAM,KAAK,SAAX,IAAwB,CAACD,KAAzB,gBAAiC,QAAC,MAAD;AAAQ,oBAAA,OAAO,EAAC,QAAhB;AAAyB,oBAAA,OAAO,EAAEsB,0BAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAjC,GAEU,IAJf,EAKKrB,MAAM,CAACe,QAAP,CAAgB,gBAAhB,KAAqChB,KAArC,gBAA6C,QAAC,MAAD;AAAQ,oBAAA,OAAO,EAAC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAA7C,GAEU,IAPf;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAUI,QAAC,GAAD;AAAK,kBAAA,SAAS,EAAC,+BAAf;AAAA,yCAEI,QAAC,MAAD;AAAQ,oBAAA,OAAO,EAAC,SAAhB;AAA0B,oBAAA,OAAO,EAAEqB,uBAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,wBAVJ,eAgBI,QAAC,GAAD;AAAK,kBAAA,SAAS,EAAC,+BAAf;AAAA,6BAEKpB,MAAM,KAAK,SAAX,IAAwB,CAACD,KAAzB,gBACD,QAAC,MAAD;AAAQ,oBAAA,OAAO,EAAC,SAAhB;AAA0B,oBAAA,OAAO,EAAEmC,uBAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADC,GAGW,IALhB,EAMKlC,MAAM,CAACe,QAAP,CAAgB,gBAAhB,KAAqChB,KAArC,gBACD,QAAC,MAAD;AAAQ,oBAAA,OAAO,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADC,GAGW,IAThB;AAAA;AAAA;AAAA;AAAA;AAAA,wBAhBJ,eA2BI,QAAC,GAAD;AAAK,kBAAA,SAAS,EAAC,+BAAf;AAAA,4BAEKC,MAAM,KAAK,SAAX,IAAwB,CAACD,KAAzB,gBACD,QAAC,MAAD;AAAQ,oBAAA,OAAO,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADC,GAGW;AALhB;AAAA;AAAA;AAAA;AAAA,wBA3BJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBA9EJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBARJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAiII,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,cAjIJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAuIH;;GAhXQb,W;UAEYP,W,EAIDA,W,EAIAC,U,EACCF,W;;;KAXZQ,W;AAkXT,eAAeA,WAAf","sourcesContent":["import Container from 'react-bootstrap/Container';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport '../css/editRequest.css';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { EmployeeState, RequestState } from '../redux/reducer';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { MutableRefObject, useRef } from 'react';\r\nimport requestService from '../services/request.service';\r\nimport employeeService from '../services/employee.service';\r\nimport { getEmployee, getSeniorEmployee } from '../redux/actions';\r\nimport { Employee } from '../models/employee.model';\r\n\r\nfunction EditRequest() {\r\n    // use redux hooks\r\n    const employee = useSelector((state: EmployeeState) => state.employee);\r\n    console.log('Current employee: ', employee);\r\n    const newEmployee = {...employee};\r\n\r\n    const request = useSelector((state: RequestState) => state.request);\r\n    const newRequest = {...request};\r\n    console.log('Current request in state: ', request.id);\r\n    \r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n\r\n    // check if employee and request's maker are the same\r\n    console.log(employee.demographics.email);\r\n    console.log(request.demographics.email);\r\n    let match = employee.demographics.email === request.demographics.email ? true : false;\r\n    console.log(match);\r\n\r\n    // check status of request\r\n    let status = request.statusOf;\r\n\r\n    //refs for input values\r\n    const rejectionRef = useRef() as MutableRefObject<HTMLTextAreaElement>;\r\n    const moreInfoRef = useRef() as MutableRefObject<HTMLTextAreaElement>;\r\n    const employeeChoiceRef = useRef() as MutableRefObject<HTMLSelectElement>;\r\n\r\n    // get employees below current employee\r\n    async function getJuniorEmployees() {\r\n        const employeesReturned = await employeeService.getEmployees().then( employeesReturned => {\r\n            console.log('all employees returned from db: ', employeesReturned);\r\n            //then perform calculations\r\n            return employeesReturned;\r\n        }).catch( () => {\r\n            console.log('Error, could not get employees');\r\n        });\r\n\r\n        // get junior employees\r\n        const juniorEmployees: Employee[] = [];\r\n\r\n        if (employeesReturned) {\r\n            employeesReturned.forEach( (employeeElement: any) => {\r\n                if (employeeElement.role.length < employee.role.length) {\r\n                    if (employee.role.includes('Head') && !employeeElement.role.includes('BenCo')) {\r\n                        juniorEmployees.push(employeeElement);\r\n                    }\r\n                    \r\n                }\r\n            });\r\n        }\r\n\r\n        return juniorEmployees;\r\n        \r\n    }\r\n\r\n    // unwrap promise\r\n    const juniorEmployeesPromise = getJuniorEmployees();\r\n    var juniorEmployees: any = [];\r\n    juniorEmployeesPromise.then(result => juniorEmployees.concat(result));\r\n\r\n    console.log('junior employee array: ', juniorEmployees);\r\n\r\n    // for(const prop in juniorEmployeesPromise){\r\n    //     juniorEmployees.push(juniorEmployeesPromise[prop]);\r\n    // }\r\n\r\n    console.log('junior employees of current employee: ', juniorEmployees);\r\n\r\n    // handle cancel button\r\n    function handleGoBackButtonClick() {\r\n        history.push(\"/dashboard\");\r\n    }\r\n\r\n    // handle rejection button\r\n    async function handleRejectionButtonClick() {\r\n        // make sure rejection decision is filled\r\n        if (!rejectionRef.current.value) {\r\n            console.log('Error, please enter a rejection reason.');\r\n        } else {\r\n            // iterate over employee's requests and delete the specific request\r\n            for (let i = 0; i < employee.requests.length; i++) {\r\n                if (request.id === employee.requests[i].id) {\r\n                    newEmployee.requests.splice(i, 1);\r\n                }\r\n            }\r\n            //update current employee with new array of requests\r\n            employeeService.updateEmployee(newEmployee).then( employeeReturned => {\r\n                console.log('employee dispatched to employee state: ', employeeReturned);\r\n                dispatch(getEmployee(employeeReturned));\r\n            }).catch( () => {\r\n                console.log('Employee could not be updated!');\r\n            });\r\n\r\n            // change request status and request rejection info in request table (update request)\r\n            newRequest.statusOf = 'Rejected';\r\n            newRequest.rejectInfo = rejectionRef.current.value;\r\n            // update request in DB, no need to dispatch\r\n            requestService.updateRequest(newRequest).then().catch( () => {\r\n                console.log('Error, could not update request in database.');\r\n            });\r\n    \r\n            // get requestor by username\r\n            const requestor = await employeeService.getEmployeeByUsername(newRequest.username).then( employeeReturned => {\r\n                console.log('requestor returned: ', employeeReturned);\r\n                return employeeReturned;\r\n            }).catch( () => {\r\n                console.log('Error, could not get requestor from database');\r\n            });\r\n\r\n            //update their request\r\n            if (requestor) {\r\n                for (let i = 0; i < requestor.requests.length; i++) {\r\n                    if (request.id === requestor.requests[i].id) {\r\n                        requestor.requests.splice(i, 1);\r\n                        requestor.requests.push(newRequest);\r\n                    }\r\n                }\r\n            }\r\n             \r\n\r\n            // update employee whose status is affected\r\n            if (requestor) {\r\n                employeeService.updateEmployee(requestor).then( () => {\r\n                    history.push('/dashboard');\r\n                }).catch( () => {\r\n                    console.log('Employee could not be updated!');\r\n                });\r\n            }\r\n        }\r\n        \r\n    }\r\n\r\n    // handle accept button\r\n    async function handleAcceptButtonClick() {\r\n\r\n        // if BenCo\r\n        if (newEmployee.role.includes('BenCo')) {\r\n            // change request's status to accepted (update requestor employee)\r\n            newRequest.statusOf = 'Accepted';\r\n\r\n            // get requestor by username\r\n            const requestor = await employeeService.getEmployeeByUsername(newRequest.username).then( employeeReturned => {\r\n                console.log('requestor returned: ', employeeReturned);\r\n                return employeeReturned;\r\n            }).catch( () => {\r\n                console.log('Error, could not get requestor from database');\r\n            });\r\n\r\n            //update their request\r\n            if (requestor) {\r\n                for (let i = 0; i < requestor.requests.length; i++) {\r\n                    if (request.id === requestor.requests[i].id) {\r\n                        requestor.requests.splice(i, 1);\r\n                        requestor.requests.push(newRequest);\r\n                    }\r\n                }\r\n            }\r\n\r\n            // update employee whose request status is affected\r\n            if (requestor) {\r\n                employeeService.updateEmployee(requestor).then().catch( () => {\r\n                    console.log('Employee could not be updated!');\r\n                });\r\n            }\r\n\r\n            // change request status in request table (update request)\r\n            requestService.updateRequest(newRequest).then().catch( () => {\r\n                console.log('Error, could not update request in database.');\r\n            });\r\n        } else {\r\n            //get senior employee\r\n            let arrayReturned = await employeeService.getSeniorEmployeeByRole(newEmployee.role).then( employees => {\r\n                return employees;\r\n            }).catch(() => {\r\n                console.log('Error, could not get senior employee!');\r\n            });\r\n            let newArray: Employee[] = [];\r\n            if (arrayReturned) {\r\n                for (const prop in arrayReturned) {\r\n                        newArray.push(arrayReturned[prop]);\r\n                    }\r\n            }\r\n            const newSeniorEmployee = newArray[0];\r\n\r\n            // add the request to the senior employee\r\n            newSeniorEmployee.requests.push(newRequest);\r\n\r\n            //add request to senior employee's requests\r\n            employeeService.updateEmployee(newSeniorEmployee).then( employeeReturned => {\r\n                console.log('employee dispatched to senioremployee state: ', employeeReturned);\r\n                dispatch(getSeniorEmployee(employeeReturned));\r\n            }).catch( () => {\r\n                console.log('Employee could not be updated!');\r\n            });\r\n        }\r\n\r\n        // iterate over employee's requests and delete the specific request\r\n        for (let i = 0; i < employee.requests.length; i++) {\r\n            if (request.id === employee.requests[i].id) {\r\n                newEmployee.requests.splice(i, 1);\r\n            }\r\n        }\r\n        //update current employee with new array of requests\r\n        employeeService.updateEmployee(newEmployee).then( employeeReturned => {\r\n            console.log('employee dispatched to employee state: ', employeeReturned);\r\n            dispatch(getEmployee(employeeReturned));\r\n            history.push('/dashboard');\r\n        }).catch( () => {\r\n            console.log('Employee could not be updated!');\r\n        });\r\n    }\r\n\r\n    // handle request info button\r\n    function handleRequestInfoButtonClick() {\r\n        // get all employees BELOW my role, make them options in a selection input\r\n\r\n        // make sure proper selection of employee is made\r\n\r\n        // change request status to 'Needs Revision' (update request)\r\n\r\n        // change selected employee's current request's status to 'Needs Revision from TITLE OF CURRENT EMPLOYEE' (update employee)\r\n            // maybe use seniorEmployee state for this or create a juniorEmployee state\r\n\r\n        // delete request from current employee (update employee)\r\n    }\r\n\r\n    function handleCancelRequestButtonClick() {\r\n        // delete request from database\r\n\r\n        // remove request from current employee (update employee)\r\n\r\n    }\r\n\r\n    return (\r\n        <Container id=\"editRequestContainer\">\r\n            <Row id=\"reimbursementForm\">\r\n                <Col />\r\n                <Col lg={8}>\r\n                    <Row id=\"reimbursementHeader\">\r\n                        <Col />\r\n                        <Col md=\"10\" className=\"text-center\">\r\n                            <h1>Tuition Reimbursement Form</h1>\r\n                        </Col>\r\n                        <Col />\r\n                    </Row>\r\n                    <Row id=\"reimbursementBody\">\r\n                        <Col>\r\n                            <Form>\r\n                                <Form.Row className=\"justify-content-md-center\">\r\n                                    <Form.Group as={Col} controlId=\"formDateCreated\">\r\n                                            <Form.Label>Today's Date</Form.Label>\r\n                                            <Form.Control type=\"text\" placeholder={request.dateCreated} readOnly/>\r\n                                    </Form.Group>\r\n                                </Form.Row>\r\n                                <Form.Row>\r\n                                    <Form.Group as={Col}>\r\n                                        <Form.Label>First Name</Form.Label>\r\n                                        <Form.Control type=\"text\" placeholder={request.demographics.firstname} readOnly/>\r\n                                        <Form.Label>Last Name</Form.Label>\r\n                                        <Form.Control type=\"text\" placeholder={request.demographics.lastname} readOnly/>\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Col}>\r\n                                        <Form.Label>Phone Number</Form.Label>\r\n                                        <Form.Control type=\"text\" placeholder={request.demographics.phone} readOnly/>\r\n                                        <Form.Label>Email</Form.Label>\r\n                                        <Form.Control type=\"text\" placeholder={request.demographics.email} readOnly/>\r\n                                    </Form.Group>\r\n                                </Form.Row>\r\n                                <Form.Row>\r\n                                    <Form.Group as={Col}>\r\n                                        <Form.Label>Event Type</Form.Label>\r\n                                        <Form.Control type=\"text\" placeholder={request.event.eventType} readOnly >\r\n                                        </Form.Control>\r\n                                        <Form.Label>Cost</Form.Label>\r\n                                        <Form.Control type=\"text\" placeholder={request.event.cost.toString()} readOnly/>\r\n                                        <Form.Label>Projected Reimbursement</Form.Label>\r\n                                        <Form.Control type=\"text\" readOnly />\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Col}>\r\n                                        <Form.Label>Start Date</Form.Label>\r\n                                        <Form.Control type=\"text\" placeholder={request.event.startDate} readOnly/>\r\n                                        <Form.Label>End Date</Form.Label>\r\n                                        <Form.Control type=\"text\" placeholder={request.event.endDate}readOnly/>\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Col}>\r\n                                        <Form.Label>Grading Format</Form.Label>\r\n                                        <Form.Control type=\"text\" placeholder={request.event.gradingFormat}readOnly>\r\n                                        </Form.Control>\r\n                                        <Form.Label>Location</Form.Label>\r\n                                        <Form.Control type=\"text\" placeholder={request.event.location}readOnly/>\r\n                                    </Form.Group>\r\n                                </Form.Row>\r\n                                <Form.Row>\r\n                                    <Form.Group as={Col}>\r\n                                        <Form.Label>Event Description</Form.Label>\r\n                                        <Form.Control  as=\"textarea\" rows={3} placeholder={request.event.description} readOnly/>\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Col}>\r\n                                        <Form.Label>Justification</Form.Label>\r\n                                        <Form.Control as=\"textarea\" rows={3} placeholder={request.justification} readOnly/>\r\n                                    </Form.Group>\r\n                                </Form.Row>\r\n                                <Form.Row>\r\n                                    {/* if status is pending */}\r\n                                    {status === 'Pending' && !match ? <Form.Group as={Col}>\r\n                                        <Form.Label>Rejection Reason</Form.Label>\r\n                                        <Form.Control  as=\"textarea\" rows={3}  ref={rejectionRef}/>\r\n                                    </Form.Group> : null }\r\n                                    {status === 'Rejected' ? <Form.Group as={Col}>\r\n                                        <Form.Label>Rejection Reason</Form.Label>\r\n                                        <Form.Control  as=\"textarea\" rows={3}  placeholder={request.rejectInfo} ref={rejectionRef} readOnly/>\r\n                                    </Form.Group> : null }\r\n                                    {/* if status is Needs Revision */}\r\n                                    {status.includes('Needs Revision') ? <Form.Group as={Col}>\r\n                                        <Form.Label>Additional Information</Form.Label>\r\n                                        <Form.Control as=\"textarea\" rows={3}/>\r\n                                    </Form.Group>: null }\r\n                                    {/* if status is pending */}\r\n                                    {status === 'Pending' && !match ? <Form.Group as={Col}>\r\n                                        <Form.Label>Select Employee</Form.Label>\r\n                                        <Form.Control type=\"text\" as=\"select\"/>\r\n                                        <Form.Label>Request More Information</Form.Label>\r\n                                        <Form.Control as=\"textarea\" rows={3}/>\r\n                                    </Form.Group> : null}\r\n                                </Form.Row>\r\n                                <Form.Row id=\"createRequestButtonRow\">\r\n                                    <Col className=\"d-flex justify-content-center\">\r\n                                         {/* red button */}\r\n                                        {status === 'Pending' && !match ? <Button variant=\"danger\" onClick={handleRejectionButtonClick}>\r\n                                            Reject Request\r\n                                        </Button>: null }\r\n                                        {status.includes('Needs Revision') && match ? <Button variant=\"danger\">\r\n                                            Cancel Request\r\n                                        </Button>: null }\r\n                                    </Col>\r\n                                    <Col className=\"d-flex justify-content-center\">\r\n                                        {/* yellow button */}\r\n                                        <Button variant=\"warning\" onClick={handleGoBackButtonClick}>\r\n                                            Go Back\r\n                                        </Button>\r\n                                    </Col>\r\n                                    <Col className=\"d-flex justify-content-center\">\r\n                                        {/* green button */}\r\n                                        {status === 'Pending' && !match ? \r\n                                        <Button variant=\"success\" onClick={handleAcceptButtonClick}>\r\n                                            Approve\r\n                                        </Button> : null }\r\n                                        {status.includes('Needs Revision') && match ?\r\n                                        <Button variant=\"success\">\r\n                                            Resubmit\r\n                                        </Button> : null }\r\n                                    </Col>\r\n                                    <Col className=\"d-flex justify-content-center\">\r\n                                        {/* blue button */}\r\n                                        {status === 'Pending' && !match?\r\n                                        <Button variant=\"info\">\r\n                                            Request More Info\r\n                                        </Button> : null }\r\n                                    </Col>\r\n                                </Form.Row>\r\n                            </Form>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n                <Col />\r\n            </Row>\r\n        </Container>\r\n      );\r\n}\r\n\r\nexport default EditRequest;"]},"metadata":{},"sourceType":"module"}