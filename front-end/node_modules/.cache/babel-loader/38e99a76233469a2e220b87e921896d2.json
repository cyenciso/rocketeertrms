{"ast":null,"code":"import axios from 'axios';\n\nclass EmployeeService {\n  constructor() {\n    this.URI = void 0;\n    this.URI = 'http://localhost:9000/users';\n  } // gets logged in user from backend session\n\n\n  getLogin() {\n    return axios.get(this.URI, {\n      withCredentials: true\n    }).then(result => {\n      return result.status;\n    });\n  } // returns either an employee object or null if not found\n\n\n  login(employee) {\n    return axios.post(this.URI, employee, {\n      withCredentials: true\n    }).then(result => result.data);\n  }\n\n  logout() {\n    return axios.delete(this.URI, {\n      withCredentials: true\n    }).then(result => null);\n  }\n\n}\n\nexport default new EmployeeService();","map":{"version":3,"sources":["C:/Users/cynth/GitRepos/2012-dec14-react/projectOne/front-end/src/services/employee.service.ts"],"names":["axios","EmployeeService","constructor","URI","getLogin","get","withCredentials","then","result","status","login","employee","post","data","logout","delete"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAGA,MAAMC,eAAN,CAAsB;AAIlBC,EAAAA,WAAW,GAAG;AAAA,SAFNC,GAEM;AACV,SAAKA,GAAL,GAAW,6BAAX;AACH,GANiB,CAQlB;;;AACAC,EAAAA,QAAQ,GAAoB;AACxB,WAAOJ,KAAK,CAACK,GAAN,CAAU,KAAKF,GAAf,EAAoB;AAACG,MAAAA,eAAe,EAAE;AAAlB,KAApB,EAA6CC,IAA7C,CAAkDC,MAAM,IAAE;AAC7D,aAAOA,MAAM,CAACC,MAAd;AACH,KAFM,CAAP;AAGH,GAbiB,CAelB;;;AACAC,EAAAA,KAAK,CAACC,QAAD,EAAwC;AACzC,WAAOX,KAAK,CAACY,IAAN,CAAW,KAAKT,GAAhB,EAAqBQ,QAArB,EAA+B;AAACL,MAAAA,eAAe,EAAE;AAAlB,KAA/B,EAAwDC,IAAxD,CAA6DC,MAAM,IAAIA,MAAM,CAACK,IAA9E,CAAP;AACH;;AAEDC,EAAAA,MAAM,GAAkB;AACpB,WAAOd,KAAK,CAACe,MAAN,CAAa,KAAKZ,GAAlB,EAAuB;AAACG,MAAAA,eAAe,EAAE;AAAlB,KAAvB,EAAgDC,IAAhD,CAAqDC,MAAM,IAAI,IAA/D,CAAP;AACH;;AAtBiB;;AAyBtB,eAAe,IAAIP,eAAJ,EAAf","sourcesContent":["import axios from 'axios';\r\nimport { Employee } from '../models/employee.model';\r\n\r\nclass EmployeeService {\r\n\r\n    private URI: string;\r\n\r\n    constructor() {\r\n        this.URI = 'http://localhost:9000/users';\r\n    }\r\n\r\n    // gets logged in user from backend session\r\n    getLogin(): Promise<number> {\r\n        return axios.get(this.URI, {withCredentials: true}).then(result=>{\r\n            return result.status;\r\n        });\r\n    }\r\n\r\n    // returns either an employee object or null if not found\r\n    login(employee: Employee): Promise<Employee> {\r\n        return axios.post(this.URI, employee, {withCredentials: true}).then(result => result.data);\r\n    }\r\n\r\n    logout(): Promise<null> {\r\n        return axios.delete(this.URI, {withCredentials: true}).then(result => null);\r\n    }\r\n}\r\n\r\nexport default new EmployeeService();"]},"metadata":{},"sourceType":"module"}