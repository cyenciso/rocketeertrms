{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\cynth\\\\GitRepos\\\\2012-dec14-react\\\\projectOne\\\\front-end\\\\src\\\\components\\\\createRequest.tsx\",\n    _s = $RefreshSig$();\n\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport '../css/createRequest.css';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useRef } from 'react';\n\nfunction CreateRequest() {\n  _s();\n\n  // get state, use react hooks\n  const employee = useSelector(state => state.employee); //const seniorEmployee = useSelector((state: EmployeeState) => state.seniorEmployee);\n\n  const request = useSelector(state => state.request);\n  const dispatch = useDispatch();\n  const history = useHistory(); //refs for all input fields\n\n  const dateCreatedRef = useRef();\n  const availableRef = useRef();\n  const eventTypeRef = useRef();\n  const locationRef = useRef();\n  const gradingFormatRef = useRef();\n  const costRef = useRef();\n  const startDateRef = useRef();\n  const endDateRef = useRef(); //const gradeCutOffRef = useRef() as MutableRefObject<HTMLInputElement>;\n\n  const justificationRef = useRef();\n  const eventDescriptionRef = useRef(); //handle cancel button\n\n  function handleCancelButtonClick() {\n    history.push(\"/dashboard\");\n  } //handle submit button\n\n\n  async function handleSubmitButtonClick(e) {\n    e.preventDefault();\n    const newRequest = { ...request\n    };\n    const newEmployee = { ...employee\n    };\n\n    if (dateCreatedRef.current.value) {\n      newRequest.dateCreated = dateCreatedRef.current.value; // separate created date into usable numbers\n\n      const createdDateStringArray = dateCreatedRef.current.value.split('-');\n      const createdDateNumberArray = [];\n      createdDateStringArray.forEach(string => {\n        createdDateNumberArray.push(Number(string));\n      });\n      const createdDateYear = createdDateNumberArray[0];\n      const createdDateMonth = createdDateNumberArray[1];\n      const createdDateDay = createdDateNumberArray[2];\n\n      if (startDateRef.current.value) {\n        // separate start date into usable numbers\n        const startDateStringArray = startDateRef.current.value.split('-');\n        const startDateNumberArray = [];\n        startDateStringArray.forEach(string => {\n          startDateNumberArray.push(Number(string));\n        });\n        const startDateYear = startDateNumberArray[0];\n        const startDateMonth = startDateNumberArray[1];\n        const startDateDay = startDateNumberArray[2]; //start date must be 7 days after creation date\n\n        if (startDateYear > createdDateYear) {\n          newRequest.event.startDate = startDateRef.current.value;\n        } else if (startDateYear === createdDateYear) {\n          //check month\n          if (startDateMonth > createdDateMonth) {\n            newRequest.event.startDate = startDateRef.current.value;\n          } else if (startDateMonth === createdDateMonth) {\n            //check day\n            if (startDateDay >= createdDateDay + 7) {\n              newRequest.event.startDate = startDateRef.current.value;\n\n              if (startDateDay < createdDateDay + 14) {\n                newRequest.isUrgent = true;\n              }\n\n              console.log('is urgent?', newRequest.isUrgent);\n            } else {\n              console.log('Error, please enter a valid day at least 7 days after created day.');\n            }\n          } else {\n            console.log('Error, please enter a valid month.');\n          }\n        } else {\n          console.log('Error, please enter a valid year.');\n        }\n\n        if (Number(costRef.current.value)) {\n          // check if number is greater than 0\n          if (Number(costRef.current.value) < 1) {\n            console.log('Error, please enter a valid cost.');\n          } else {// check if available credit is \n          }\n\n          newRequest.event.cost = Number(costRef.current.value); //calculate projected reimbursement (do on Friday)\n          // if (endDateRef.current.value) {\n          //     // make sure end date is on or after the start date\n          //     if (endDateRef.current.value < startDateRef.current.value) {\n          //         console.log('Error, please enter a valid end date.');\n          //     } else {\n          //     newRequest.event.endDate = endDateRef.current.value;\n          //     }\n          //     if (locationRef.current.value) {\n          //         newRequest.event.location = locationRef.current.value;\n          //         if (eventDescriptionRef.current.value) {\n          //             newRequest.event.description = eventDescriptionRef.current.value;\n          //             if (eventTypeRef.current.value) {\n          //                 newRequest.event.eventType = eventTypeRef.current.value;\n          //                 if (justificationRef.current.value) {\n          //                     newRequest.justification = justificationRef.current.value;\n          //                     if (gradingFormatRef.current.value) {\n          //                         newRequest.event.gradingFormat = gradingFormatRef.current.value;\n          //                         newRequest.id = Date.now();\n          //                         newRequest.statusOf = 'Pending';\n          //                         newRequest.demographics = employee.demographics;\n          //                         newRequest.username = employee.username;\n          //                         // change request state\n          //                         dispatch(changeRequest(newRequest));\n          //                         //get senior employee of current employee\n          //                         let arrayReturned = await employeeService.getSeniorEmployeeByRole(newEmployee.role).then( employees => {\n          //                             return employees;\n          //                         }).catch(() => {\n          //                             console.log('Error, could not get senior employee!');\n          //                         });\n          //                         let newArray: Employee[] = [];\n          //                         if (arrayReturned) {\n          //                             for (const prop in arrayReturned) {\n          //                                     newArray.push(arrayReturned[prop]);\n          //                                 }\n          //                         }\n          //                         const newSeniorEmployee = newArray[0];\n          //                         //change employee's available credit (do on Friday)\n          //                         // add request to database\n          //                         requestService.addRequest(newRequest).then().catch( () => {\n          //                             console.log('Error: could not add request to database.');\n          //                         });\n          //                         newEmployee.requests.push(newRequest);\n          //                         newSeniorEmployee.requests.push(newRequest);\n          //                         // make changes to DB and update our store\n          //                         employeeService.updateEmployee(newEmployee).then( employeeReturned => {\n          //                             console.log('employee dispatched to employee state: ', employeeReturned);\n          //                             dispatch(getEmployee(employeeReturned));\n          //                         }).catch( () => {\n          //                             console.log('Employee could not be updated!');\n          //                         });\n          //                         employeeService.updateEmployee(newSeniorEmployee).then( employeeReturned => {\n          //                             console.log('employee dispatched to senioremployee state: ', employeeReturned);\n          //                             dispatch(getSeniorEmployee(employeeReturned));\n          //                             history.push(\"/dashboard\");\n          //                         }).catch( () => {\n          //                             console.log('Employee could not be updated!');\n          //                         });\n          //                     }\n          //                 }\n          //             } else {\n          //                 console.log('Error, please enter an event type.');\n          //             }\n          //         } else {\n          //             console.log('Error, please enter an event description.');\n          //         }\n          //     } else {\n          //         console.log('Error, please enter a location.');\n          //     }\n          // } else {\n          //     console.log('Error, please enter a end date.');\n          // }\n        } else {\n          console.log('Error, please enter a valid number for cost.');\n        }\n      } else {\n        console.log('Error, please enter a start date.');\n      }\n    } else {\n      console.log('Error, please enter a creation date.');\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    id: \"createRequestContainer\",\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      id: \"reimbursementForm\",\n      children: [/*#__PURE__*/_jsxDEV(Col, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        lg: 8,\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          id: \"reimbursementHeader\",\n          children: [/*#__PURE__*/_jsxDEV(Col, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: \"10\",\n            className: \"text-center\",\n            children: /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"Tuition Reimbursement Form\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          id: \"reimbursementBody\",\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Form, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Row, {\n                className: \"justify-content-md-center\",\n                children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                  as: Col,\n                  controlId: \"formDateCreated\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Today's Date\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 215,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"date\",\n                    ref: dateCreatedRef\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 216,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n                children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                  as: Col,\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"First Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 221,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"text\",\n                    placeholder: employee.demographics.firstname,\n                    readOnly: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 222,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Last Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 223,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"text\",\n                    placeholder: employee.demographics.lastname,\n                    readOnly: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 224,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 220,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  as: Col,\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Phone Number\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 227,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"text\",\n                    placeholder: employee.demographics.phone,\n                    readOnly: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 228,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Email\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 229,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"text\",\n                    placeholder: employee.demographics.email,\n                    readOnly: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 230,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 226,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n                children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                  as: Col,\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Available Credit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 235,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"text\",\n                    ref: availableRef,\n                    placeholder: employee.availableCredit.toString(),\n                    readOnly: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 236,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Cost\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 237,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"number\",\n                    min: 1,\n                    max: 1000,\n                    ref: costRef\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 238,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Projected Reimbursement\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 239,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"text\",\n                    readOnly: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 240,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 234,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  as: Col,\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Event Type\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 243,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    as: \"select\",\n                    ref: eventTypeRef,\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"University Course\",\n                      children: \"University Course\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 245,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"Seminar\",\n                      children: \"Seminar\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 246,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"Certification Prep Class\",\n                      children: \"Certification Prep Class\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 247,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"Certification\",\n                      children: \"Certification\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 248,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"Technical Training\",\n                      children: \"Technical Training\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 249,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"Other\",\n                      children: \"Other\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 250,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 244,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Start Date\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 252,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"date\",\n                    ref: startDateRef\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 253,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"End Date\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 254,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"date\",\n                    ref: endDateRef\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 255,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 242,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  as: Col,\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Grading Format\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 258,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"text\",\n                    as: \"select\",\n                    ref: gradingFormatRef,\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"Letter\",\n                      children: \"Letter\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 260,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"Percentage\",\n                      children: \"Percentage\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 261,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"None\",\n                      children: \"None\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 262,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 259,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Location\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 264,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"text\",\n                    ref: locationRef\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 265,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 257,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n                children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                  as: Col,\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Event Description\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 270,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    as: \"textarea\",\n                    rows: 3,\n                    ref: eventDescriptionRef\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 271,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 269,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  as: Col,\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Justification\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 274,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    as: \"textarea\",\n                    rows: 3,\n                    ref: justificationRef\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 275,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 273,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n                id: \"createRequestButtonRow\",\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  className: \"d-flex justify-content-center\",\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"danger\",\n                    onClick: handleCancelButtonClick,\n                    children: \"Cancel\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 280,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 279,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  className: \"d-flex justify-content-center\",\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"warning\",\n                    type: \"submit\",\n                    onClick: handleSubmitButtonClick,\n                    children: \"Submit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 285,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 284,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 199,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CreateRequest, \"foEjPtHv7xatUq8Rq3Mua5O61Vc=\", false, function () {\n  return [useSelector, useSelector, useDispatch, useHistory];\n});\n\n_c = CreateRequest;\nexport default CreateRequest;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateRequest\");","map":{"version":3,"sources":["C:/Users/cynth/GitRepos/2012-dec14-react/projectOne/front-end/src/components/createRequest.tsx"],"names":["Container","Form","Button","Row","Col","useHistory","useDispatch","useSelector","useRef","CreateRequest","employee","state","request","dispatch","history","dateCreatedRef","availableRef","eventTypeRef","locationRef","gradingFormatRef","costRef","startDateRef","endDateRef","justificationRef","eventDescriptionRef","handleCancelButtonClick","push","handleSubmitButtonClick","e","preventDefault","newRequest","newEmployee","current","value","dateCreated","createdDateStringArray","split","createdDateNumberArray","forEach","string","Number","createdDateYear","createdDateMonth","createdDateDay","startDateStringArray","startDateNumberArray","startDateYear","startDateMonth","startDateDay","event","startDate","isUrgent","console","log","cost","demographics","firstname","lastname","phone","email","availableCredit","toString"],"mappings":"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","sourcesContent":["import Container from 'react-bootstrap/Container';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport '../css/createRequest.css';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { EmployeeState, RequestState } from '../redux/reducer';\r\nimport { MutableRefObject, SyntheticEvent, useRef } from 'react';\r\nimport employeeService from '../services/employee.service';\r\nimport { Employee } from '../models/employee.model';\r\nimport { changeRequest, getEmployee, getSeniorEmployee } from '../redux/actions';\r\nimport requestService from '../services/request.service';\r\n\r\nfunction CreateRequest() {\r\n    // get state, use react hooks\r\n    const employee = useSelector((state: EmployeeState) => state.employee);\r\n    //const seniorEmployee = useSelector((state: EmployeeState) => state.seniorEmployee);\r\n    const request = useSelector((state: RequestState) => state.request);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    //refs for all input fields\r\n    const dateCreatedRef = useRef() as MutableRefObject<HTMLInputElement>;\r\n    const availableRef = useRef() as MutableRefObject<HTMLInputElement>;\r\n    const eventTypeRef = useRef() as MutableRefObject<HTMLSelectElement>;\r\n    const locationRef = useRef() as MutableRefObject<HTMLInputElement>;\r\n    const gradingFormatRef = useRef() as MutableRefObject<HTMLSelectElement>;\r\n    const costRef = useRef() as MutableRefObject<HTMLInputElement>;\r\n    const startDateRef = useRef() as MutableRefObject<HTMLInputElement>;\r\n    const endDateRef = useRef() as MutableRefObject<HTMLInputElement>;\r\n    //const gradeCutOffRef = useRef() as MutableRefObject<HTMLInputElement>;\r\n    const justificationRef = useRef() as MutableRefObject<HTMLTextAreaElement>;\r\n    const eventDescriptionRef = useRef() as MutableRefObject<HTMLTextAreaElement>;\r\n\r\n    //handle cancel button\r\n    function handleCancelButtonClick() {\r\n        history.push(\"/dashboard\");\r\n    }\r\n\r\n    //handle submit button\r\n    async function handleSubmitButtonClick(e: SyntheticEvent) {\r\n        e.preventDefault();\r\n        const newRequest = {...request};\r\n        const newEmployee = {...employee};\r\n\r\n        if (dateCreatedRef.current.value) {\r\n            newRequest.dateCreated = dateCreatedRef.current.value;\r\n\r\n            // separate created date into usable numbers\r\n            const createdDateStringArray = (dateCreatedRef.current.value).split('-');\r\n            const createdDateNumberArray: number[] = [];\r\n            createdDateStringArray.forEach( string => {\r\n                createdDateNumberArray.push(Number(string));\r\n            });\r\n            const createdDateYear = createdDateNumberArray[0];\r\n            const createdDateMonth = createdDateNumberArray[1];\r\n            const createdDateDay = createdDateNumberArray[2];\r\n            if (startDateRef.current.value) {\r\n                // separate start date into usable numbers\r\n                const startDateStringArray = (startDateRef.current.value).split('-');\r\n                const startDateNumberArray: number[] = [];\r\n                startDateStringArray.forEach( string => {\r\n                    startDateNumberArray.push(Number(string));\r\n                });\r\n                const startDateYear = startDateNumberArray[0];\r\n                const startDateMonth = startDateNumberArray[1];\r\n                const startDateDay = startDateNumberArray[2];\r\n                \r\n                //start date must be 7 days after creation date\r\n                if (startDateYear > createdDateYear) {\r\n                    newRequest.event.startDate = startDateRef.current.value;\r\n                } else if (startDateYear === createdDateYear) {\r\n                    //check month\r\n                    if(startDateMonth > createdDateMonth) {\r\n                        newRequest.event.startDate = startDateRef.current.value;\r\n                    } else if (startDateMonth === createdDateMonth) {\r\n                        //check day\r\n                        if (startDateDay >= (createdDateDay + 7)) {\r\n                            newRequest.event.startDate = startDateRef.current.value;\r\n                            if (startDateDay < (createdDateDay + 14)){\r\n                                newRequest.isUrgent = true;\r\n                                \r\n                            }\r\n\r\n                            console.log('is urgent?', newRequest.isUrgent);\r\n                        } else {\r\n                            console.log('Error, please enter a valid day at least 7 days after created day.');\r\n                        }\r\n                    } else {\r\n                        console.log('Error, please enter a valid month.');\r\n                    }\r\n                } else {\r\n                    console.log('Error, please enter a valid year.');\r\n                }\r\n                \r\n                if (Number(costRef.current.value)) {\r\n                    // check if number is greater than 0\r\n                    if (Number(costRef.current.value) < 1) {\r\n                        console.log('Error, please enter a valid cost.');\r\n                    } else {\r\n                        // check if available credit is \r\n                    }\r\n                    newRequest.event.cost = Number(costRef.current.value);\r\n\r\n                    //calculate projected reimbursement (do on Friday)\r\n\r\n                    // if (endDateRef.current.value) {\r\n                    //     // make sure end date is on or after the start date\r\n                    //     if (endDateRef.current.value < startDateRef.current.value) {\r\n                    //         console.log('Error, please enter a valid end date.');\r\n                    //     } else {\r\n                    //     newRequest.event.endDate = endDateRef.current.value;\r\n                    //     }\r\n                        \r\n                    //     if (locationRef.current.value) {\r\n                    //         newRequest.event.location = locationRef.current.value;\r\n                    //         if (eventDescriptionRef.current.value) {\r\n                    //             newRequest.event.description = eventDescriptionRef.current.value;\r\n                    //             if (eventTypeRef.current.value) {\r\n                    //                 newRequest.event.eventType = eventTypeRef.current.value;\r\n                    //                 if (justificationRef.current.value) {\r\n                    //                     newRequest.justification = justificationRef.current.value;\r\n                    //                     if (gradingFormatRef.current.value) {\r\n                    //                         newRequest.event.gradingFormat = gradingFormatRef.current.value;\r\n                    //                         newRequest.id = Date.now();\r\n                    //                         newRequest.statusOf = 'Pending';\r\n                    //                         newRequest.demographics = employee.demographics;\r\n                    //                         newRequest.username = employee.username;\r\n\r\n                    //                         // change request state\r\n                    //                         dispatch(changeRequest(newRequest));\r\n                    //                         //get senior employee of current employee\r\n                    //                         let arrayReturned = await employeeService.getSeniorEmployeeByRole(newEmployee.role).then( employees => {\r\n                    //                             return employees;\r\n                    //                         }).catch(() => {\r\n                    //                             console.log('Error, could not get senior employee!');\r\n                    //                         });\r\n                    //                         let newArray: Employee[] = [];\r\n                    //                         if (arrayReturned) {\r\n                    //                             for (const prop in arrayReturned) {\r\n                    //                                     newArray.push(arrayReturned[prop]);\r\n                    //                                 }\r\n                    //                         }\r\n                    //                         const newSeniorEmployee = newArray[0];\r\n        \r\n                    //                         //change employee's available credit (do on Friday)\r\n                                            \r\n                    //                         // add request to database\r\n                    //                         requestService.addRequest(newRequest).then().catch( () => {\r\n                    //                             console.log('Error: could not add request to database.');\r\n                    //                         });\r\n\r\n                    //                         newEmployee.requests.push(newRequest);\r\n                    //                         newSeniorEmployee.requests.push(newRequest);\r\n                    //                         // make changes to DB and update our store\r\n                    //                         employeeService.updateEmployee(newEmployee).then( employeeReturned => {\r\n                    //                             console.log('employee dispatched to employee state: ', employeeReturned);\r\n                    //                             dispatch(getEmployee(employeeReturned));\r\n                    //                         }).catch( () => {\r\n                    //                             console.log('Employee could not be updated!');\r\n                    //                         });\r\n                    //                         employeeService.updateEmployee(newSeniorEmployee).then( employeeReturned => {\r\n                    //                             console.log('employee dispatched to senioremployee state: ', employeeReturned);\r\n                    //                             dispatch(getSeniorEmployee(employeeReturned));\r\n                    //                             history.push(\"/dashboard\");\r\n                    //                         }).catch( () => {\r\n                    //                             console.log('Employee could not be updated!');\r\n                    //                         });\r\n                    //                     }\r\n                    //                 }\r\n                    //             } else {\r\n                    //                 console.log('Error, please enter an event type.');\r\n                    //             }\r\n                    //         } else {\r\n                    //             console.log('Error, please enter an event description.');\r\n                    //         }\r\n                    //     } else {\r\n                    //         console.log('Error, please enter a location.');\r\n                    //     }\r\n                    // } else {\r\n                    //     console.log('Error, please enter a end date.');\r\n                    // }\r\n                } else {\r\n                    console.log('Error, please enter a valid number for cost.');\r\n                }\r\n            } else {\r\n                console.log('Error, please enter a start date.');\r\n            }\r\n        } else {\r\n            console.log('Error, please enter a creation date.');\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    return (\r\n        <Container id=\"createRequestContainer\">\r\n            <Row id=\"reimbursementForm\">\r\n                <Col />\r\n                <Col lg={8}>\r\n                    <Row id=\"reimbursementHeader\">\r\n                        <Col />\r\n                        <Col md=\"10\" className=\"text-center\">\r\n                            <h1>Tuition Reimbursement Form</h1>\r\n                        </Col>\r\n                        <Col />\r\n                    </Row>\r\n                    <Row id=\"reimbursementBody\">\r\n                        <Col>\r\n                            <Form>\r\n                                <Form.Row className=\"justify-content-md-center\">\r\n                                    <Form.Group as={Col} controlId=\"formDateCreated\">\r\n                                            <Form.Label>Today's Date</Form.Label>\r\n                                            <Form.Control type=\"date\" ref={dateCreatedRef} />\r\n                                    </Form.Group>\r\n                                </Form.Row>\r\n                                <Form.Row>\r\n                                    <Form.Group as={Col}>\r\n                                        <Form.Label>First Name</Form.Label>\r\n                                        <Form.Control type=\"text\" placeholder={employee.demographics.firstname} readOnly/>\r\n                                        <Form.Label>Last Name</Form.Label>\r\n                                        <Form.Control type=\"text\" placeholder={employee.demographics.lastname} readOnly/>\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Col}>\r\n                                        <Form.Label>Phone Number</Form.Label>\r\n                                        <Form.Control type=\"text\" placeholder={employee.demographics.phone} readOnly/>\r\n                                        <Form.Label>Email</Form.Label>\r\n                                        <Form.Control type=\"text\" placeholder={employee.demographics.email} readOnly/>\r\n                                    </Form.Group>\r\n                                </Form.Row>\r\n                                <Form.Row>\r\n                                    <Form.Group as={Col}>\r\n                                        <Form.Label>Available Credit</Form.Label>\r\n                                        <Form.Control type=\"text\" ref={availableRef} placeholder={employee.availableCredit.toString()} readOnly/>\r\n                                        <Form.Label>Cost</Form.Label>\r\n                                        <Form.Control type=\"number\" min={1} max={1000} ref={costRef} />\r\n                                        <Form.Label>Projected Reimbursement</Form.Label>\r\n                                        <Form.Control type=\"text\" readOnly />\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Col}>\r\n                                    <Form.Label>Event Type</Form.Label>\r\n                                        <Form.Control as=\"select\" ref={eventTypeRef}>\r\n                                            <option value=\"University Course\">University Course</option>\r\n                                            <option value=\"Seminar\">Seminar</option>\r\n                                            <option value=\"Certification Prep Class\">Certification Prep Class</option>\r\n                                            <option value=\"Certification\">Certification</option>\r\n                                            <option value=\"Technical Training\">Technical Training</option>\r\n                                            <option value=\"Other\">Other</option>\r\n                                        </Form.Control>\r\n                                        <Form.Label>Start Date</Form.Label>\r\n                                        <Form.Control type=\"date\" ref={startDateRef} />\r\n                                        <Form.Label>End Date</Form.Label>\r\n                                        <Form.Control type=\"date\" ref={endDateRef} />\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Col}>\r\n                                        <Form.Label>Grading Format</Form.Label>\r\n                                        <Form.Control type=\"text\" as=\"select\" ref={gradingFormatRef}>\r\n                                            <option value=\"Letter\">Letter</option>\r\n                                            <option value=\"Percentage\">Percentage</option>\r\n                                            <option value=\"None\">None</option>\r\n                                        </Form.Control>\r\n                                        <Form.Label>Location</Form.Label>\r\n                                        <Form.Control type=\"text\" ref={locationRef} />\r\n                                    </Form.Group>\r\n                                </Form.Row>\r\n                                <Form.Row>\r\n                                    <Form.Group as={Col}>\r\n                                        <Form.Label>Event Description</Form.Label>\r\n                                        <Form.Control  as=\"textarea\" rows={3} ref={eventDescriptionRef} />\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Col}>\r\n                                        <Form.Label>Justification</Form.Label>\r\n                                        <Form.Control as=\"textarea\" rows={3} ref={justificationRef} />\r\n                                    </Form.Group>\r\n                                </Form.Row>\r\n                                <Form.Row id=\"createRequestButtonRow\">\r\n                                    <Col className=\"d-flex justify-content-center\">\r\n                                        <Button variant=\"danger\" onClick={handleCancelButtonClick}>\r\n                                            Cancel\r\n                                        </Button>\r\n                                    </Col>\r\n                                    <Col className=\"d-flex justify-content-center\">\r\n                                        <Button variant=\"warning\" type=\"submit\" onClick={handleSubmitButtonClick}>\r\n                                            Submit\r\n                                        </Button>\r\n                                    </Col>\r\n                                </Form.Row>\r\n                            </Form>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n                <Col />\r\n            </Row>\r\n        </Container>\r\n      );\r\n}\r\n\r\nexport default CreateRequest;"]},"metadata":{},"sourceType":"module"}